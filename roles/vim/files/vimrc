scriptencoding utf-8
set encoding=utf-8
set fileencoding=utf-8
set bomb

set nocp

filetype off
filetype plugin indent off
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

"-- Color scheme and appearance
Plugin 'morhetz/gruvbox'

"-- IDE-like features
Plugin 'christoomey/vim-tmux-navigator'

"-- requires fzf to be installed, install it from github junegunn/fzf
Plugin 'junegunn/fzf.vim'
Plugin 'junegunn/fzf'

"-- Git integrations
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-fugitive'

"-- Utility functions / libs / dependencies
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'dag/vim-fish'

call vundle#end()

"--- Legibility & usability
set showbreak=↪\
set listchars=tab:→\ ,eol:↲,nbsp:␣,trail:•,extends:⟩,precedes:⟨
let mapleader = " "
let g:mapleader = " "
set incsearch
set hlsearch
set so=1

"--- Syntax highlighting & color scheme
filetype plugin indent on
syntax on
"syntax enable
silent! colorscheme gruvbox
set background=dark
set backspace=indent,eol,start
"--- Text wrapping & line length
set colorcolumn=81
set textwidth=0
set nowrap

"--- Code indentation & formatting
set ai
set number
set relativenumber

"--- Tab and space default settings
set tabstop=4
set noexpandtab
set softtabstop=4
set shiftwidth=4

"--- Error handling
set vb
set noeb
set laststatus=2

"--- Yank to, and paste from system clipboard
set clipboard=unnamed

"--- Split handling & navigation
set splitbelow
set splitright

" Just use Ctrl-hjkl instead..
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Split resizing
nnoremap <silent> <C-Left> :vertical resize +3<CR>
nnoremap <silent> <C-Right> :vertical resize -3<CR>
nnoremap <silent> <C-Up> :resize +3<CR>
nnoremap <silent> <C-Down> :resize +3<CR>

" Toggle between horizontal and vertical split
map <Leader>th <C-w>t<C-w>H
map <Leader>tk <C-w>t<C-w>K

" Remove pipe symbol between splits
set fillchars+=vert:\ 

"--- Tab handling
nnoremap <Tab> gt
nnoremap <S-Tab> gT
nnoremap <silent> <C-t> :tabnew<CR>

" --- Open up a terminal in vim
map <Leader>tt :vert term<CR>

"--- Toggle invisible chars (t)oggle (i)nvisible
nnoremap <Leader>ti :set list!<CR>

"--- Abbreviation list (wip)
iab <expr> dts strftime("%F")

"--- Spaces, and tabs and files - oh my!
" ts = width of tab
" sw = amount of columns to indent with >> or <<
" sts = amount of whitespace inserted when tab is pressed to reach tabstop
" expandtab/noexpandtab = 'expand' tab into spaces, or don't
"
if has("autocmd")
	" enable filetype detection
	filetype on

	" These filetypes are fussy about tabs vs spaces
	autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
	autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

	" Customisations based on house-style (arbitrary)
	autocmd FileType html setlocal ts=2 sts=2 sw=2 expandtab
	autocmd FileType css setlocal ts=2 sts=2 sw=2 expandtab
	autocmd FileType javascript setlocal ts=4 sts=4 sw=4 noexpandtab

	" Treat .rss files as XML
	autocmd BufNewFile,BufRead *.rss setfiletype xml
endif

" Strip trailing whitespace without moving cursor
function! <SID>StripTrailingWhitespaces()
	" Preparation: save last search, and cursor position.
	let _s=@/
	let l = line(".")
	let c = col(".")
	" Do the business:
	%s/\s\+$//e
	" Clean up: restore previous search history, and cursor position
	let @/=_s
	call cursor(l, c)
endfunction

" <F5> Strips all trailing whitespaces
nnoremap <silent> <F5> :call <SID>StripTrailingWhitespaces()<CR>

" Upon closing these files, auto-remove whitespaces
" autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" Watch my .vimrc (works with all kinds of gui's!) and reload when a change occurs
augroup myvimrc
	au!
	au BufWritePost .vimrc,_vimrc,vimrc,.gvimrc,_gvimrc,gvimrc so $MYVIMRC | if has('gui_running') | so $MYGVIMRC | endif
augroup END

"--- Plugin: Fugitive
nnoremap <Leader>gc :Git commit %<CR>
nnoremap <Leader>gd :Gdiff<CR>
nnoremap <Leader>gst :Git<CR>
nnoremap <Leader>gp :Git push<CR>
nnoremap <Leader>gb :Git blame<CR>

"--- Plugin: fzf
"In the results window:
" <C-v> open in vsplit
" <C-x> open in hsplit
" <C-t> open in tab
nnoremap <C-p> :Files<CR>
nnoremap <C-o> :GFiles<CR>

"-- Plugin: fzf - ripgrep enhancements
set grepprg=rg\ --vimgrep\ --smart-case\ --follow
nnoremap <C-f> :Rg<CR>

"make ripgrep ignore filenames, increases it's usability.
command! -bang -nargs=* Rg call fzf#vim#grep("rg --column --line-number --no-heading --color=always --smart-case ".shellescape(<q-args>), 1, {'options': '--delimiter : --nth 4..'}, <bang>0)
